// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	models "github.com/andrei1998Front/grpc_img_srvr/internal/domain/models"
	mock "github.com/stretchr/testify/mock"
)

// ImgDownloader is an autogenerated mock type for the ImgDownloader type
type ImgDownloader struct {
	mock.Mock
}

// Download provides a mock function with given fields: filename
func (_m *ImgDownloader) Download(filename string) (*models.ImgInfo, error) {
	ret := _m.Called(filename)

	if len(ret) == 0 {
		panic("no return value specified for Download")
	}

	var r0 *models.ImgInfo
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*models.ImgInfo, error)); ok {
		return rf(filename)
	}
	if rf, ok := ret.Get(0).(func(string) *models.ImgInfo); ok {
		r0 = rf(filename)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ImgInfo)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(filename)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewImgDownloader creates a new instance of ImgDownloader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewImgDownloader(t interface {
	mock.TestingT
	Cleanup(func())
}) *ImgDownloader {
	mock := &ImgDownloader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
